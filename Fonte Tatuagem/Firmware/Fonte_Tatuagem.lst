;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26/01/2020 23:54:37
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x294B      	GOTO       331
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A9      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A2      	MOVWF      34
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A1      	MOVWF      33
0x000F	0x0872      	MOVF       R2, 0
0x0010	0x00A0      	MOVWF      32
0x0011	0x0804      	MOVF       FSR, 0
0x0012	0x00A3      	MOVWF      35
;Fonte_Tatuagem.c,12 :: 		void interrupt()                  //função de interrupção, endereço 0x04 de memória
;Fonte_Tatuagem.c,14 :: 		if(T0IF_bit)                    //Verifica se houve overflow do timer 0
0x0013	0x1D0B      	BTFSS      T0IF_bit, 2
0x0014	0x2849      	GOTO       L_interrupt0
;Fonte_Tatuagem.c,16 :: 		T0IF_bit = 0x00;               //Limpa registrador para a proxima interrupção
0x0015	0x110B      	BCF        T0IF_bit, 2
;Fonte_Tatuagem.c,18 :: 		if(d1_decimal == 0 && control == 1)
0x0016	0x1987      	BTFSC      PORTC, 3
0x0017	0x2830      	GOTO       L_interrupt3
0x0018	0x3000      	MOVLW      0
0x0019	0x0625      	XORWF      _control+1, 0
0x001A	0x1D03      	BTFSS      STATUS, 2
0x001B	0x281E      	GOTO       L__interrupt20
0x001C	0x3001      	MOVLW      1
0x001D	0x0624      	XORWF      _control, 0
L__interrupt20:
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x2830      	GOTO       L_interrupt3
L__interrupt17:
;Fonte_Tatuagem.c,20 :: 		d1_decimal = 0x00;
0x0020	0x1187      	BCF        PORTC, 3
;Fonte_Tatuagem.c,21 :: 		d2_unidade = 0x00;
0x0021	0x1207      	BCF        PORTC, 4
;Fonte_Tatuagem.c,22 :: 		portb = 0;
0x0022	0x0186      	CLRF       PORTB
;Fonte_Tatuagem.c,23 :: 		d1_decimal = 0x01;
0x0023	0x1587      	BSF        PORTC, 3
;Fonte_Tatuagem.c,24 :: 		portb = display(3);
0x0024	0x3003      	MOVLW      3
0x0025	0x00B0      	MOVWF      FARG_display_pos
0x0026	0x3000      	MOVLW      0
0x0027	0x00B1      	MOVWF      FARG_display_pos+1
0x0028	0x20DE      	CALL       _display
0x0029	0x0870      	MOVF       R0, 0
0x002A	0x0086      	MOVWF      PORTB
;Fonte_Tatuagem.c,25 :: 		control = 0x02;
0x002B	0x3002      	MOVLW      2
0x002C	0x00A4      	MOVWF      _control
0x002D	0x3000      	MOVLW      0
0x002E	0x00A5      	MOVWF      _control+1
;Fonte_Tatuagem.c,26 :: 		}
0x002F	0x2849      	GOTO       L_interrupt4
L_interrupt3:
;Fonte_Tatuagem.c,27 :: 		else if(d2_unidade == 0 && control == 2)
0x0030	0x1A07      	BTFSC      PORTC, 4
0x0031	0x2849      	GOTO       L_interrupt7
0x0032	0x3000      	MOVLW      0
0x0033	0x0625      	XORWF      _control+1, 0
0x0034	0x1D03      	BTFSS      STATUS, 2
0x0035	0x2838      	GOTO       L__interrupt21
0x0036	0x3002      	MOVLW      2
0x0037	0x0624      	XORWF      _control, 0
L__interrupt21:
0x0038	0x1D03      	BTFSS      STATUS, 2
0x0039	0x2849      	GOTO       L_interrupt7
L__interrupt16:
;Fonte_Tatuagem.c,29 :: 		d1_decimal = 0x00;
0x003A	0x1187      	BCF        PORTC, 3
;Fonte_Tatuagem.c,30 :: 		d2_unidade = 0x00;
0x003B	0x1207      	BCF        PORTC, 4
;Fonte_Tatuagem.c,31 :: 		portb = 0;
0x003C	0x0186      	CLRF       PORTB
;Fonte_Tatuagem.c,32 :: 		d2_unidade = 0x01;
0x003D	0x1607      	BSF        PORTC, 4
;Fonte_Tatuagem.c,33 :: 		portb = display(2);
0x003E	0x3002      	MOVLW      2
0x003F	0x00B0      	MOVWF      FARG_display_pos
0x0040	0x3000      	MOVLW      0
0x0041	0x00B1      	MOVWF      FARG_display_pos+1
0x0042	0x20DE      	CALL       _display
0x0043	0x0870      	MOVF       R0, 0
0x0044	0x0086      	MOVWF      PORTB
;Fonte_Tatuagem.c,34 :: 		control = 0x01;
0x0045	0x3001      	MOVLW      1
0x0046	0x00A4      	MOVWF      _control
0x0047	0x3000      	MOVLW      0
0x0048	0x00A5      	MOVWF      _control+1
;Fonte_Tatuagem.c,35 :: 		}
L_interrupt7:
L_interrupt4:
;Fonte_Tatuagem.c,36 :: 		}
L_interrupt0:
;Fonte_Tatuagem.c,37 :: 		}
L_end_interrupt:
L__interrupt19:
0x0049	0x0822      	MOVF       34, 0
0x004A	0x00F0      	MOVWF      R0
0x004B	0x0821      	MOVF       33, 0
0x004C	0x00F1      	MOVWF      R1
0x004D	0x0820      	MOVF       32, 0
0x004E	0x00F2      	MOVWF      R2
0x004F	0x0823      	MOVF       35, 0
0x0050	0x0084      	MOVWF      FSR
0x0051	0x082A      	MOVF       ___savePCLATH, 0
0x0052	0x008A      	MOVWF      PCLATH
0x0053	0x0E29      	SWAPF      ___saveSTATUS, 0
0x0054	0x0083      	MOVWF      STATUS
0x0055	0x0EFF      	SWAPF      R15, 1
0x0056	0x0E7F      	SWAPF      R15, 0
0x0057	0x0009      	RETFIE
; end of _interrupt
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0058	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0059	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x005A	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x005B	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x005C	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x005D	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x005E	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x005F	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x0060	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x0061	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0062	0x286C      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0063	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0064	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0065	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0066	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0067	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0068	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0069	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x006A	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x006B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x006C	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x006D	0x2874      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x006E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x006F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x0070	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x0071	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0072	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0073	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0074	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0075	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0076	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0077	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0078	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0079	0x285F      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x007A	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x007B	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x007C	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x007D	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x007E	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x007F	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x0080	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x0081	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16x16_U:
0x0082	0x0008      	RETURN
; end of _Mul_16x16_U
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,40 :: 		
;__Lib_PWM_c21.c,44 :: 		
0x0083	0x1683      	BSF        STATUS, 5
0x0084	0x1303      	BCF        STATUS, 6
0x0085	0x0812      	MOVF       PR2, 0
0x0086	0x3E01      	ADDLW      1
0x0087	0x00F0      	MOVWF      R0
0x0088	0x01F1      	CLRF       R0+1
0x0089	0x1803      	BTFSC      STATUS, 0
0x008A	0x0AF1      	INCF       R0+1, 1
0x008B	0x1283      	BCF        STATUS, 5
0x008C	0x082F      	MOVF       FARG_PWM1_Set_Duty_new_duty, 0
0x008D	0x00F4      	MOVWF      R4
0x008E	0x01F5      	CLRF       R4+1
0x008F	0x2058      	CALL       _Mul_16x16_U
0x0090	0x3006      	MOVLW      6
0x0091	0x00F2      	MOVWF      R2
0x0092	0x0870      	MOVF       R0, 0
0x0093	0x00F4      	MOVWF      R4
0x0094	0x0871      	MOVF       R0+1, 0
0x0095	0x00F5      	MOVWF      R4+1
0x0096	0x0872      	MOVF       R2, 0
L__PWM1_Set_Duty10:
0x0097	0x1903      	BTFSC      STATUS, 2
0x0098	0x289E      	GOTO       L__PWM1_Set_Duty11
0x0099	0x0CF5      	RRF        R4+1, 1
0x009A	0x0CF4      	RRF        R4, 1
0x009B	0x13F5      	BCF        R4+1, 7
0x009C	0x3EFF      	ADDLW      255
0x009D	0x2897      	GOTO       L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,45 :: 		
0x009E	0x3004      	MOVLW      4
0x009F	0x00F1      	MOVWF      R1
0x00A0	0x0874      	MOVF       R4, 0
0x00A1	0x00F0      	MOVWF      R0
0x00A2	0x0871      	MOVF       R1, 0
L__PWM1_Set_Duty12:
0x00A3	0x1903      	BTFSC      STATUS, 2
0x00A4	0x28A9      	GOTO       L__PWM1_Set_Duty13
0x00A5	0x0DF0      	RLF        R0, 1
0x00A6	0x1070      	BCF        R0, 0
0x00A7	0x3EFF      	ADDLW      255
0x00A8	0x28A3      	GOTO       L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x00A9	0x3030      	MOVLW      48
0x00AA	0x0570      	ANDWF      R0, 0
0x00AB	0x00F3      	MOVWF      R3
;__Lib_PWM_c21.c,46 :: 		
0x00AC	0x0874      	MOVF       R4, 0
0x00AD	0x00F0      	MOVWF      R0
0x00AE	0x0875      	MOVF       R4+1, 0
0x00AF	0x00F1      	MOVWF      R0+1
0x00B0	0x0CF1      	RRF        R0+1, 1
0x00B1	0x0CF0      	RRF        R0, 1
0x00B2	0x13F1      	BCF        R0+1, 7
0x00B3	0x0CF1      	RRF        R0+1, 1
0x00B4	0x0CF0      	RRF        R0, 1
0x00B5	0x13F1      	BCF        R0+1, 7
0x00B6	0x0870      	MOVF       R0, 0
0x00B7	0x0095      	MOVWF      CCPR1L
;__Lib_PWM_c21.c,47 :: 		
0x00B8	0x300F      	MOVLW      15
0x00B9	0x0597      	ANDWF      CCP1CON, 1
;__Lib_PWM_c21.c,48 :: 		
0x00BA	0x0873      	MOVF       R3, 0
0x00BB	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,49 :: 		
L_end_PWM1_Set_Duty:
0x00BC	0x0008      	RETURN
; end of _PWM1_Set_Duty
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00BD	0x1283      	BCF        STATUS, 5
0x00BE	0x1303      	BCF        STATUS, 6
0x00BF	0x0828      	MOVF       ___DoICPAddr+1, 0
0x00C0	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00C1	0x0827      	MOVF       ___DoICPAddr, 0
0x00C2	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00C3	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00C4	0x20BD      	CALL       _____DoICP
0x00C5	0x118A      	BCF        PCLATH, 3
0x00C6	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00C7	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00C8	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00C9	0x0AA7      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00CA	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00CB	0x0AA8      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00CC	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00CD	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00CE	0x28C4      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00CF	0x0008      	RETURN
; end of ___CC2DW
_PWM1_Start:
;__Lib_PWM_c21.c,51 :: 		
;__Lib_PWM_c21.c,52 :: 		
0x00D0	0x1683      	BSF        STATUS, 5
0x00D1	0x1303      	BCF        STATUS, 6
0x00D2	0x1107      	BCF        TRISC2_bit, 2
;__Lib_PWM_c21.c,53 :: 		
0x00D3	0x1283      	BCF        STATUS, 5
0x00D4	0x1512      	BSF        T2CON, 2
;__Lib_PWM_c21.c,54 :: 		
0x00D5	0x300C      	MOVLW      12
0x00D6	0x0497      	IORWF      CCP1CON, 1
;__Lib_PWM_c21.c,55 :: 		
L_end_PWM1_Start:
0x00D7	0x0008      	RETURN
; end of _PWM1_Start
_PWM1_Init:
;__Lib_PWM_c21.c,33 :: 		
;__Lib_PWM_c21.c,34 :: 		
;__Lib_PWM_c21.c,35 :: 		
0x00D8	0x1283      	BCF        STATUS, 5
0x00D9	0x1303      	BCF        STATUS, 6
0x00DA	0x0195      	CLRF       CCPR1L
;__Lib_PWM_c21.c,36 :: 		
0x00DB	0x1217      	BCF        CCP1CON, 4
;__Lib_PWM_c21.c,37 :: 		
0x00DC	0x1297      	BCF        CCP1CON, 5
;__Lib_PWM_c21.c,38 :: 		
L_end_PWM1_Init:
0x00DD	0x0008      	RETURN
; end of _PWM1_Init
_display:
;Fonte_Tatuagem.c,66 :: 		int display(int pos)
;Fonte_Tatuagem.c,69 :: 		int display[] = {63, 6, 91, 79, 102, 109, 125, 7, 127, 111};
0x00DE	0x303F      	MOVLW      63
0x00DF	0x1283      	BCF        STATUS, 5
0x00E0	0x1303      	BCF        STATUS, 6
0x00E1	0x00B2      	MOVWF      display_display_L0
0x00E2	0x3000      	MOVLW      0
0x00E3	0x00B3      	MOVWF      display_display_L0+1
0x00E4	0x3006      	MOVLW      6
0x00E5	0x00B4      	MOVWF      display_display_L0+2
0x00E6	0x3000      	MOVLW      0
0x00E7	0x00B5      	MOVWF      display_display_L0+3
0x00E8	0x305B      	MOVLW      91
0x00E9	0x00B6      	MOVWF      display_display_L0+4
0x00EA	0x3000      	MOVLW      0
0x00EB	0x00B7      	MOVWF      display_display_L0+5
0x00EC	0x304F      	MOVLW      79
0x00ED	0x00B8      	MOVWF      display_display_L0+6
0x00EE	0x3000      	MOVLW      0
0x00EF	0x00B9      	MOVWF      display_display_L0+7
0x00F0	0x3066      	MOVLW      102
0x00F1	0x00BA      	MOVWF      display_display_L0+8
0x00F2	0x3000      	MOVLW      0
0x00F3	0x00BB      	MOVWF      display_display_L0+9
0x00F4	0x306D      	MOVLW      109
0x00F5	0x00BC      	MOVWF      display_display_L0+10
0x00F6	0x3000      	MOVLW      0
0x00F7	0x00BD      	MOVWF      display_display_L0+11
0x00F8	0x307D      	MOVLW      125
0x00F9	0x00BE      	MOVWF      display_display_L0+12
0x00FA	0x3000      	MOVLW      0
0x00FB	0x00BF      	MOVWF      display_display_L0+13
0x00FC	0x3007      	MOVLW      7
0x00FD	0x00C0      	MOVWF      display_display_L0+14
0x00FE	0x3000      	MOVLW      0
0x00FF	0x00C1      	MOVWF      display_display_L0+15
0x0100	0x307F      	MOVLW      127
0x0101	0x00C2      	MOVWF      display_display_L0+16
0x0102	0x3000      	MOVLW      0
0x0103	0x00C3      	MOVWF      display_display_L0+17
0x0104	0x306F      	MOVLW      111
0x0105	0x00C4      	MOVWF      display_display_L0+18
0x0106	0x3000      	MOVLW      0
0x0107	0x00C5      	MOVWF      display_display_L0+19
;Fonte_Tatuagem.c,70 :: 		number = display[pos];
0x0108	0x0830      	MOVF       FARG_display_pos, 0
0x0109	0x00F0      	MOVWF      R0
0x010A	0x0831      	MOVF       FARG_display_pos+1, 0
0x010B	0x00F1      	MOVWF      R0+1
0x010C	0x0DF0      	RLF        R0, 1
0x010D	0x0DF1      	RLF        R0+1, 1
0x010E	0x1070      	BCF        R0, 0
0x010F	0x0870      	MOVF       R0, 0
0x0110	0x3E32      	ADDLW      display_display_L0
0x0111	0x0084      	MOVWF      FSR
;Fonte_Tatuagem.c,71 :: 		return(number);
0x0112	0x0800      	MOVF       INDF, 0
0x0113	0x00F0      	MOVWF      R0
0x0114	0x0A84      	INCF       FSR, 1
0x0115	0x0800      	MOVF       INDF, 0
0x0116	0x00F1      	MOVWF      R0+1
;Fonte_Tatuagem.c,72 :: 		}
L_end_display:
0x0117	0x0008      	RETURN
; end of _display
_control_veloc:
;Fonte_Tatuagem.c,74 :: 		void control_veloc()
;Fonte_Tatuagem.c,76 :: 		if(mais == 0)
0x0118	0x1283      	BCF        STATUS, 5
0x0119	0x1303      	BCF        STATUS, 6
0x011A	0x1805      	BTFSC      PORTA, 0
0x011B	0x2932      	GOTO       L_control_veloc10
;Fonte_Tatuagem.c,78 :: 		portc.f0 = 1;
0x011C	0x1407      	BSF        PORTC, 0
;Fonte_Tatuagem.c,79 :: 		duty = duty + 9;
0x011D	0x3009      	MOVLW      9
0x011E	0x07A6      	ADDWF      _duty, 1
;Fonte_Tatuagem.c,80 :: 		delay_ms(100);
0x011F	0x3082      	MOVLW      130
0x0120	0x00FC      	MOVWF      R12
0x0121	0x30DD      	MOVLW      221
0x0122	0x00FD      	MOVWF      R13
L_control_veloc11:
0x0123	0x0BFD      	DECFSZ     R13, 1
0x0124	0x2923      	GOTO       L_control_veloc11
0x0125	0x0BFC      	DECFSZ     R12, 1
0x0126	0x2923      	GOTO       L_control_veloc11
0x0127	0x0000      	NOP
0x0128	0x0000      	NOP
;Fonte_Tatuagem.c,81 :: 		PWM1_Set_Duty(duty);
0x0129	0x0826      	MOVF       _duty, 0
0x012A	0x00AF      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x012B	0x2083      	CALL       _PWM1_Set_Duty
;Fonte_Tatuagem.c,82 :: 		if(duty >= 250)
0x012C	0x30FA      	MOVLW      250
0x012D	0x0226      	SUBWF      _duty, 0
0x012E	0x1C03      	BTFSS      STATUS, 0
0x012F	0x2932      	GOTO       L_control_veloc12
;Fonte_Tatuagem.c,84 :: 		duty = 250;
0x0130	0x30FA      	MOVLW      250
0x0131	0x00A6      	MOVWF      _duty
;Fonte_Tatuagem.c,85 :: 		}
L_control_veloc12:
;Fonte_Tatuagem.c,86 :: 		}
L_control_veloc10:
;Fonte_Tatuagem.c,87 :: 		if(menos == 0)
0x0132	0x1885      	BTFSC      PORTA, 1
0x0133	0x294A      	GOTO       L_control_veloc13
;Fonte_Tatuagem.c,89 :: 		portc.f0 = 0;
0x0134	0x1007      	BCF        PORTC, 0
;Fonte_Tatuagem.c,90 :: 		duty = duty - 9;
0x0135	0x3009      	MOVLW      9
0x0136	0x02A6      	SUBWF      _duty, 1
;Fonte_Tatuagem.c,91 :: 		delay_ms(100);
0x0137	0x3082      	MOVLW      130
0x0138	0x00FC      	MOVWF      R12
0x0139	0x30DD      	MOVLW      221
0x013A	0x00FD      	MOVWF      R13
L_control_veloc14:
0x013B	0x0BFD      	DECFSZ     R13, 1
0x013C	0x293B      	GOTO       L_control_veloc14
0x013D	0x0BFC      	DECFSZ     R12, 1
0x013E	0x293B      	GOTO       L_control_veloc14
0x013F	0x0000      	NOP
0x0140	0x0000      	NOP
;Fonte_Tatuagem.c,92 :: 		PWM1_Set_Duty(duty);
0x0141	0x0826      	MOVF       _duty, 0
0x0142	0x00AF      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0143	0x2083      	CALL       _PWM1_Set_Duty
;Fonte_Tatuagem.c,93 :: 		if(duty <= 39)
0x0144	0x0826      	MOVF       _duty, 0
0x0145	0x3C27      	SUBLW      39
0x0146	0x1C03      	BTFSS      STATUS, 0
0x0147	0x294A      	GOTO       L_control_veloc15
;Fonte_Tatuagem.c,95 :: 		duty = 39;
0x0148	0x3027      	MOVLW      39
0x0149	0x00A6      	MOVWF      _duty
;Fonte_Tatuagem.c,96 :: 		}
L_control_veloc15:
;Fonte_Tatuagem.c,97 :: 		}
L_control_veloc13:
;Fonte_Tatuagem.c,98 :: 		}
L_end_control_veloc:
0x014A	0x0008      	RETURN
; end of _control_veloc
_main:
0x014B	0x3001      	MOVLW      1
0x014C	0x1283      	BCF        STATUS, 5
0x014D	0x1303      	BCF        STATUS, 6
0x014E	0x00A4      	MOVWF      _control
0x014F	0x01A5      	CLRF       37
0x0150	0x3027      	MOVLW      39
0x0151	0x00A6      	MOVWF      _duty
;Fonte_Tatuagem.c,39 :: 		void main()
;Fonte_Tatuagem.c,41 :: 		cmcon = 0x07;                   //desabilita os comparadores internos da porta B
0x0152	0x3007      	MOVLW      7
0x0153	0x1683      	BSF        STATUS, 5
0x0154	0x009C      	MOVWF      CMCON
;Fonte_Tatuagem.c,42 :: 		intcon = 0xA0;                  //Habilita a interrupção global e a interrupção do timer 0
0x0155	0x30A0      	MOVLW      160
0x0156	0x008B      	MOVWF      INTCON
;Fonte_Tatuagem.c,43 :: 		option_reg = 0x83;              //Desabilita os resistores de pull-up da porta B e configura prescaler para 1:16
0x0157	0x3083      	MOVLW      131
0x0158	0x0081      	MOVWF      OPTION_REG
;Fonte_Tatuagem.c,48 :: 		porta = 0x00;
0x0159	0x1283      	BCF        STATUS, 5
0x015A	0x0185      	CLRF       PORTA
;Fonte_Tatuagem.c,49 :: 		trisa = 0x03;
0x015B	0x3003      	MOVLW      3
0x015C	0x1683      	BSF        STATUS, 5
0x015D	0x0085      	MOVWF      TRISA
;Fonte_Tatuagem.c,50 :: 		portb = 0x00;
0x015E	0x1283      	BCF        STATUS, 5
0x015F	0x0186      	CLRF       PORTB
;Fonte_Tatuagem.c,51 :: 		trisb = 0x00;
0x0160	0x1683      	BSF        STATUS, 5
0x0161	0x0186      	CLRF       TRISB
;Fonte_Tatuagem.c,52 :: 		portc = 0x00;
0x0162	0x1283      	BCF        STATUS, 5
0x0163	0x0187      	CLRF       PORTC
;Fonte_Tatuagem.c,53 :: 		trisc = 0x00;
0x0164	0x1683      	BSF        STATUS, 5
0x0165	0x0187      	CLRF       TRISC
;Fonte_Tatuagem.c,54 :: 		PWM1_Init(5000);                //Inicializa PWM1 com 5kHz
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x1012      	BCF        T2CON, 0
0x0168	0x1092      	BCF        T2CON, 1
0x0169	0x30C7      	MOVLW      199
0x016A	0x1683      	BSF        STATUS, 5
0x016B	0x0092      	MOVWF      PR2
0x016C	0x20D8      	CALL       _PWM1_Init
;Fonte_Tatuagem.c,57 :: 		PWM1_Start();                   //Inicia PWM1
0x016D	0x20D0      	CALL       _PWM1_Start
;Fonte_Tatuagem.c,58 :: 		PWM1_Set_Duty(duty);            //Configura Duty Cicle positivo
0x016E	0x0826      	MOVF       _duty, 0
0x016F	0x00AF      	MOVWF      FARG_PWM1_Set_Duty_new_duty
0x0170	0x2083      	CALL       _PWM1_Set_Duty
;Fonte_Tatuagem.c,60 :: 		while(1)
L_main8:
;Fonte_Tatuagem.c,62 :: 		control_veloc();
0x0171	0x2118      	CALL       _control_veloc
;Fonte_Tatuagem.c,63 :: 		}
0x0172	0x2971      	GOTO       L_main8
;Fonte_Tatuagem.c,64 :: 		}
L_end_main:
0x0173	0x2973      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [84]    _interrupt
0x0058      [43]    _Mul_16x16_U
0x0083      [58]    _PWM1_Set_Duty
0x00BD       [7]    _____DoICP
0x00C4      [12]    ___CC2DW
0x00D0       [8]    _PWM1_Start
0x00D8       [6]    _PWM1_Init
0x00DE      [58]    _display
0x0118      [51]    _control_veloc
0x014B      [41]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    T0IF_bit
0x000B       [1]    INTCON
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x0024       [2]    _control
0x0026       [1]    _duty
0x0027       [2]    ___DoICPAddr
0x0029       [1]    ___saveSTATUS
0x002A       [1]    ___savePCLATH
0x002B       [4]    FARG_PWM1_Init_PWM_Freq
0x002F       [1]    FARG_PWM1_Set_Duty_new_duty
0x0030       [2]    FARG_display_pos
0x0032      [20]    display_display_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC2_bit
0x0087       [1]    TRISC
0x0092       [1]    PR2
0x009C       [1]    CMCON
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_main8
  L_main9
  L_control_veloc10
  L_control_veloc11
  L_control_veloc12
  L_control_veloc13
  L_control_veloc14
  L_control_veloc15
  L__interrupt16
  L__interrupt17
  L_end_interrupt
  _interrupt
  L__interrupt19
  L__interrupt20
  L__interrupt21
  L_end_main
  _main
  L_end_display
  _display
  L_end_control_veloc
  _control_veloc
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  L__PWM2_Set_Duty4
  L__PWM2_Set_Duty5
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_main8
  L_main9
  L_control_veloc10
  L_control_veloc11
  L_control_veloc12
  L_control_veloc13
  L_control_veloc14
  L_control_veloc15
  L__interrupt16
  L__interrupt17
  L_end_interrupt
  _interrupt
  L__interrupt19
  L__interrupt20
  L__interrupt21
  L_end_main
  _main
  L_end_display
  _display
  L_end_control_veloc
  _control_veloc
